apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  push:
    branches:
      - "**"
jobs:
  checkout:
    steps:
      - uses: cloudbees-io/checkout@v1
        with:
          provider: github
          repository: darinpope/WebGoat
          ref: develop
  build:
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        name: build
        kind: build
        shell: sh
        run: |
          echo "build"
    needs:
      - checkout
  test:
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        kind: test
        name: test
        shell: sh
        run: |
          echo "test"
    needs:
      - build
  scan:
    steps:
      - uses: docker://darinpope/tools-kitchen-sink:latest
        name: versions
        kind: scan
        shell: sh
        run: |
          trivy --version
          grype --version
          syft --version
      - uses: docker://darinpope/tools-kitchen-sink:latest
        name: filesystem scan
        kind: scan
        shell: sh
        run: |
          echo "*** getting ready to trivy fs ***"
          pwd
          ls -l
          trivy fs .
    needs:
      - test
  deploy-prod:
    environment: Production
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        name: deploy
        kind: deploy
        shell: sh
        run: |
          echo "deploy Production"
    needs:
      - scan
  deploy-pre-prod:
    environment: PreProduction
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        name: deploy
        kind: deploy
        shell: sh
        run: |
          echo "deploy PreProduction"
    needs:
      - scan
  deploy-uat:
    environment: UAT
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        name: deploy
        kind: deploy
        shell: sh
        run: |
          echo "deploy UAT"
    needs:
      - scan
  deploy-integration:
    environment: Integration
    steps:
      - uses: docker://cgr.dev/chainguard/go:latest
        name: deploy
        kind: deploy
        shell: sh
        run: |
          echo "deploy Integration"
    needs:
      - scan
